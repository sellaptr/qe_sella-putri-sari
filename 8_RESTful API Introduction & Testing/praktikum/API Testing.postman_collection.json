{
	"info": {
		"_postman_id": "1c20bd9b-1919-4d5a-bd6c-9a92b1214166",
		"name": "API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Data ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let resStatus = pm.response.code;\r",
							"let resTime = pm.response.responseTime;\r",
							"let exResponseTime = +pm.environment.get(\"responseTime\");\r",
							"let resTitle = jsonData.title;\r",
							"let exTitle = pm.environment.get(\"title\");\r",
							"console.log(resTime);\r",
							"\r",
							"// header pada Content-Type merupakan application/json\r",
							"pm.test('response Content-Type header should have application/json', () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8')\r",
							"});\r",
							"\r",
							"pm.test(`Response status code is 200`, function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(`Response Time less than ${exResponseTime}`, function(){\r",
							"    pm.expect(resTime).to.below(5000); \r",
							"});\r",
							"\r",
							"\r",
							"pm.test(`Response title is ${exTitle}`, function(){\r",
							"    pm.expect(resTitle).to.eql(exTitle);Â \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		}
	]
}